pipeline {

    // agent { label "jenkins-agent" }
    agent { label 'master' }

    // tools {
    //     dockerTool 'docker'
    // }

    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        timestamps()
        ansiColor('xtrem')
    }

    environment {        
        AWS_ACCESS_KEY_ID = credentials('accessKey')
        AWS_SECRET_ACCESS_KEY = credentials('secretKey')
        GITHUB_TOKEN = 'github_PAT'
        PROJECT_FOLDER_PATH = 'Calculator'   
        HOME_AGENT = '/home/jenkins'
        GITHUB_USER = "kpk666"
        GHCR_PATH = "ghcr.io/kpk666"
        TAG = "latest"
        MAIL_BOX = 'kpk666@tut.by'
    }
    
    stages {
        stage('Prepare_image') {
            steps {
                script {
                    println("BRANCH - ${env.BRANCH_NAME}")
                    println("PRID - ${env.CHANGE_ID}")
                    if (BRANCH_NAME == 'master') {
                        TAG = 'latest'
                    } else {
                        TAG = env.CHANGE_ID
                    }
                    IMAGE_NAME = "web-calculator:${TAG}"
                    FINAL_IMAGE_NAME = "${GHCR_PATH}/web-calculator:${TAG}"
                    CONTAINER_NAME = "web-calculator"
                }
            }
        }

        stage('Build_image') {
            steps {
                dir(PROJECT_FOLDER_PATH) {
                    sh "docker build -t ${IMAGE_NAME} -f Dockerfile ."
                }
            }
        }

        stage('Test_image') {
            steps {
                dir(PROJECT_FOLDER_PATH) {
                    sh """
                    set +e                    
                    docker run --name ${CONTAINER_NAME} -d --rm ${IMAGE_NAME} sh -c "node /var/www/html/script.js > ./log.txt && cat ./log.txt"
                    """
                }
            }
            post {
                success {
                    telegramSend(message: "${CONTAINER_NAME} successfully passed tests")
                }
                failure {                    
                    telegramSend(message: "${CONTAINER_NAME} did not pass tests")
                }
            }
        // docker run --name ${CONTAINER_NAME} -d --rm ${IMAGE_NAME} sh -c "cat /var/www/html/index.html"
        //     post {
        //         always {
        //             dir(APP_PATH) {
        //                 junit 'target/surefire-reports/*.xml'
        //             }
        //         }
        //     }
        // }

        stage('Create image') {
            when { expression { BRANCH_NAME == 'master'}}
            steps {
                script {
                    dir(PROJECT_FOLDER_PATH) {
                        sh"""
                        docker build -t ${FINAL_IMAGE_NAME} .
                        """
                    }
                }
            }
        }

        stage('Test_image_for_master') {
            when { expression { BRANCH_NAME == 'master'}}
            steps {
                dir(PROJECT_FOLDER_PATH) {
                    sh """                    
                    docker run --name ${CONTAINER_NAME} -d --rm ${IMAGE_NAME} sh -c "node /var/www/html/script.js > ./log.txt && cat ./log.txt"
                    """
                }
            }
        }

        stage('Push image') {
            when { expression { BRANCH_NAME == 'master'}}
            steps {
                withCredentials([usernamePassword(credentialsId: GITHUB_TOKEN, passwordVariable: 'pass', usernameVariable: 'user')]) {
                    sh "echo ${pass} | docker login ghcr.io -u ${user} --password-stdin"
                    sh "docker push ${FINAL_IMAGE_NAME}"
                }
            }        
        }
    }

        // post { 
        //     always { 
        //         cleanWs()
        //     }
        // }
}